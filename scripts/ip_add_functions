#!/bin/bash
# Check telnet connection function
telnet_test(){
        username=$(grep "username=" logs/output/"$ipaddress".log | cut -d"=" -f2)
        password=$(grep "username=" logs/output/"$ipaddress".log | cut -d"=" -f2)
        ./telnet.sh ipaddress username password | tee logs/raw/"$ipaddress.log"
}
# Check IP address validity function
check_ip(){
        clear
        echo "Running validity test on IP Address \"$input\". Please wait..."
        return=$(ipcalc -cs4 "$input" && echo val || echo inv)
}
# Ping IP address function
check_ping(){
        clear
        echo "Running ping check on IP Address \"$input\". Please wait..."
        return=$(ping -c1 -W5 "$input" &> /dev/null; echo "$?")
}
# Log input function
log_input(){
        echo "$1=$input" | tr '[:upper:]' '[:lower:]' | sed -r "s/ |-/_/" >> logs/output/"$ipaddress".log
        unset input
}
# Input function for adding vessels
input(){
# Run while loop until input variable is populated
while [ -z "$input" ] ; do
        clear
        # Prompt for input
        read -p "Enter $1: " input
        # Run case statement based on input variable
        case "$input" in
        # Remove log file and quit loop if "q" is entered
        q)      rm -f test.txt
                break
                ;;
        # Display warning if input is left blank and prompt to re-enter input
        '')     clear
                read -p "Input is empty. Press Enter to Continue..."
                ;;
        # Run check_ip function when IP address input is required
        *)      if [ "$1" = "IP Address" ]; then
                        check_ip
                        case "$return" in
                        # Add entered input into log file and quit loop if IP address is valid and successfully pinged
                        val)    check_ping
                                case "$return" in
                                0)      ipaddress="$input"
                                        log_input "$string"
                                        break
                                        ;;
                                1)      unset yn
                                        while [ -z "$yn" ]; do
                                                clear
                                                read -p "Could not reach IP address \"$input\". Continue anyways? (y/n): " yn
                                                case "$yn" in
                                                y)      ipaddress="$input"
                                                        log_input "$string"
                                                        break 2
                                                        ;;
                                                n)      unset input
                                                        ;;
                                                *)      clear
                                                        unset yn
                                                        read -p "Invalid input. Press Enter to Continue..."  
                                                        ;;
                                                esac
                                        done
                                        ;;
                                esac
                                ;;
                        # Display warning and prompt to save or re-enter input if IP address could not be pinged        
                        inv)    unset input
                                clear
                                read -p "\"$input\" is not a valid IP Address. Press Enter to Continue..."
                                ;;
                        esac
                # Skip checking IP address, add entered input into log file and quit loop 
                else
                        log_input "$string"
                        break
                fi
                ;;
        esac
done
}
# Main function of script
main(){
# Remove log file
rm -f test.txt
# Create input prompts from strings entered in for loop
for string in "IP Address" "Username" "Password" "Vessel Name"; do
        input "$string"
done
}
# Run main function
main
exit 0
